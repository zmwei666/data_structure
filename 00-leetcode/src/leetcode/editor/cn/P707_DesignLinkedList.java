//‰Ω†ÂèØ‰ª•ÈÄâÊã©‰ΩøÁî®ÂçïÈìæË°®ÊàñËÄÖÂèåÈìæË°®ÔºåËÆæËÆ°Âπ∂ÂÆûÁé∞Ëá™Â∑±ÁöÑÈìæË°®„ÄÇ 
//
// ÂçïÈìæË°®‰∏≠ÁöÑËäÇÁÇπÂ∫îËØ•ÂÖ∑Â§á‰∏§‰∏™Â±ûÊÄßÔºöval Âíå next „ÄÇval ÊòØÂΩìÂâçËäÇÁÇπÁöÑÂÄºÔºånext ÊòØÊåáÂêë‰∏ã‰∏Ä‰∏™ËäÇÁÇπÁöÑÊåáÈíà/ÂºïÁî®„ÄÇ 
//
// Â¶ÇÊûúÊòØÂèåÂêëÈìæË°®ÔºåÂàôËøòÈúÄË¶ÅÂ±ûÊÄß prev ‰ª•ÊåáÁ§∫ÈìæË°®‰∏≠ÁöÑ‰∏ä‰∏Ä‰∏™ËäÇÁÇπ„ÄÇÂÅáËÆæÈìæË°®‰∏≠ÁöÑÊâÄÊúâËäÇÁÇπ‰∏ãÊ†á‰ªé 0 ÂºÄÂßã„ÄÇ 
//
// ÂÆûÁé∞ MyLinkedList Á±ªÔºö 
//
// 
// MyLinkedList() ÂàùÂßãÂåñ MyLinkedList ÂØπË±°„ÄÇ 
// int get(int index) Ëé∑ÂèñÈìæË°®‰∏≠‰∏ãÊ†á‰∏∫ index ÁöÑËäÇÁÇπÁöÑÂÄº„ÄÇÂ¶ÇÊûú‰∏ãÊ†áÊó†ÊïàÔºåÂàôËøîÂõû -1 „ÄÇ 
// void addAtHead(int val) Â∞Ü‰∏Ä‰∏™ÂÄº‰∏∫ val ÁöÑËäÇÁÇπÊèíÂÖ•Âà∞ÈìæË°®‰∏≠Á¨¨‰∏Ä‰∏™ÂÖÉÁ¥†‰πãÂâç„ÄÇÂú®ÊèíÂÖ•ÂÆåÊàêÂêéÔºåÊñ∞ËäÇÁÇπ‰ºöÊàê‰∏∫ÈìæË°®ÁöÑÁ¨¨‰∏Ä‰∏™ËäÇÁÇπ„ÄÇ 
// void addAtTail(int val) Â∞Ü‰∏Ä‰∏™ÂÄº‰∏∫ val ÁöÑËäÇÁÇπËøΩÂä†Âà∞ÈìæË°®‰∏≠‰Ωú‰∏∫ÈìæË°®ÁöÑÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†„ÄÇ 
// void addAtIndex(int index, int val) Â∞Ü‰∏Ä‰∏™ÂÄº‰∏∫ val ÁöÑËäÇÁÇπÊèíÂÖ•Âà∞ÈìæË°®‰∏≠‰∏ãÊ†á‰∏∫ index ÁöÑËäÇÁÇπ‰πãÂâç„ÄÇÂ¶ÇÊûú 
//index Á≠â‰∫éÈìæË°®ÁöÑÈïøÂ∫¶ÔºåÈÇ£‰πàËØ•ËäÇÁÇπ‰ºöË¢´ËøΩÂä†Âà∞ÈìæË°®ÁöÑÊú´Â∞æ„ÄÇÂ¶ÇÊûú index ÊØîÈïøÂ∫¶Êõ¥Â§ßÔºåËØ•ËäÇÁÇπÂ∞Ü ‰∏ç‰ºöÊèíÂÖ• Âà∞ÈìæË°®‰∏≠„ÄÇ 
// void deleteAtIndex(int index) Â¶ÇÊûú‰∏ãÊ†áÊúâÊïàÔºåÂàôÂà†Èô§ÈìæË°®‰∏≠‰∏ãÊ†á‰∏∫ index ÁöÑËäÇÁÇπ„ÄÇ 
// 
//
// 
//
// Á§∫‰æãÔºö 
//
// 
//ËæìÂÖ•
//["MyLinkedList", "addAtHead", "addAtTail", "addAtIndex", "get", 
//"deleteAtIndex", "get"]
//[[], [1], [3], [1, 2], [1], [1], [1]]
//ËæìÂá∫
//[null, null, null, null, 2, null, 3]
//
//Ëß£Èáä
//MyLinkedList myLinkedList = new MyLinkedList();
//myLinkedList.addAtHead(1);
//myLinkedList.addAtTail(3);
//myLinkedList.addAtIndex(1, 2);    // ÈìæË°®Âèò‰∏∫ 1->2->3
//myLinkedList.get(1);              // ËøîÂõû 2
//myLinkedList.deleteAtIndex(1);    // Áé∞Âú®ÔºåÈìæË°®Âèò‰∏∫ 1->3
//myLinkedList.get(1);              // ËøîÂõû 3
// 
//
// 
//
// ÊèêÁ§∫Ôºö 
//
// 
// 0 <= index, val <= 1000 
// ËØ∑‰∏çË¶Å‰ΩøÁî®ÂÜÖÁΩÆÁöÑ LinkedList Â∫ì„ÄÇ 
// Ë∞ÉÁî® get„ÄÅaddAtHead„ÄÅaddAtTail„ÄÅaddAtIndex Âíå deleteAtIndex ÁöÑÊ¨°Êï∞‰∏çË∂ÖËøá 2000 „ÄÇ 
// 
//
// Related Topics ËÆæËÆ° ÈìæË°® üëç 994 üëé 0


package leetcode.editor.cn;

/**
 * ËÆæËÆ°ÈìæË°®
 * @author CodeTheory
 * @date 2024-02-21 18:51:41
 */
public class P707_DesignLinkedList{
	 public static void main(String[] args) {
//         MyLinkedList solution = new P707_DesignLinkedList().new MyLinkedList();
//         MyLinkedList myLinkedList = new MyLinkedList();
//         myLinkedList.addAtTail(0);
//         myLinkedList.addAtTail(1);
//         myLinkedList.addAtTail(2);
//         System.out.println(myLinkedList.get(0));
//         System.out.println(myLinkedList.get(1));
//         System.out.println(myLinkedList.get(2));
//         myLinkedList.addAtHead(-1);
//         System.out.println(myLinkedList.get(0));
//         System.out.println(myLinkedList.get(1));
//         System.out.println(myLinkedList.get(2));
//         System.out.println(myLinkedList.get(3));
//         myLinkedList.addAtIndex(4, 11);
//         System.out.println("==========");
//         System.out.println(myLinkedList.get(0));
//         System.out.println(myLinkedList.get(1));
//         System.out.println(myLinkedList.get(2));
//         System.out.println(myLinkedList.get(3));
//         System.out.println(myLinkedList.get(4));
//         myLinkedList.deleteAtIndex(4);
//         System.out.println("==========");
//         System.out.println(myLinkedList.get(0));
//         System.out.println(myLinkedList.get(1));
//         System.out.println(myLinkedList.get(2));
//         System.out.println(myLinkedList.get(3));


//         MyLinkedList myLinkedList = new MyLinkedList();
//         myLinkedList.addAtHead(7);
//         myLinkedList.addAtHead(2);
//         myLinkedList.addAtHead(1);
//         myLinkedList.addAtIndex(3,0);
//         myLinkedList.deleteAtIndex(2);
//         myLinkedList.addAtHead(6);
//         myLinkedList.addAtHead(4);
//         myLinkedList.get(4);
//         myLinkedList.addAtHead(4);
//         myLinkedList.addAtIndex(5,0);
//         myLinkedList.addAtHead(6);


     }
	 
//leetcode submit region begin(Prohibit modification and deletion)
class MyLinkedList {
     private int val;
     private MyLinkedList next;

    public MyLinkedList() {

    }

    public MyLinkedList(int val, MyLinkedList next) {
        this.val = val;
        this.next = next;
    }
    
    public int get(int index) {
        if (index < 0 || index >= val) {
            return -1;
        }
        return getNode(index).val;
    }
    
    public void addAtHead(int val) {
        MyLinkedList newHead = new MyLinkedList();
        newHead.val = val;
        newHead.next = next;
        next = newHead;
        this.val++;

    }
    
    public void addAtTail(int val) {
        MyLinkedList node = new MyLinkedList(val, null);
        if (this.val == 0) {
            next = node;
        } else {
            MyLinkedList prev = getNode(this.val - 1);
            prev.next = node;
        }
        this.val++;
    }
    
    public void addAtIndex(int index, int val) {
        if (index < 0 || index > this.val) {
            return;
        }
        MyLinkedList prev = getNode(index - 1);
        if (index == 0) {
            next = new MyLinkedList(val, prev);
        } else {
            prev.next = new MyLinkedList(val, prev.next);
        }
        this.val++;
    }
    
    public void deleteAtIndex(int index) {
        if (index < 0 || index >= this.val) {
            return;
        }
        if (index == 0) {
            next = next.next;
        } else {
            MyLinkedList prev = getNode(index - 1);
            prev.next = prev.next.next;
        }
        this.val--;
    }

    private MyLinkedList getNode(int index) {
        MyLinkedList root = next;
        for (int i = 0; i < index; i++) {
            root = root.next;
        }
        return root;
    }

    @Override
    public String toString() {
        return this.val +"_"+ next;
    }
}

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList obj = new MyLinkedList();
 * int param_1 = obj.get(index);
 * obj.addAtHead(val);
 * obj.addAtTail(val);
 * obj.addAtIndex(index,val);
 * obj.deleteAtIndex(index);
 */
//leetcode submit region end(Prohibit modification and deletion)

}